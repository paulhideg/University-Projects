     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;(c+d)+(a-b)+a
    15 00000000 0300                        a dw 3h
    16 00000002 0200                        b dw 2h
    17 00000004 0300                        c dw 3h
    18 00000006 0100                        d dw 1h
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 66A1[00000000]                  mov AX,[a]
    24 00000006 668B1D[02000000]                mov BX,[b]
    25 0000000D 668B0D[04000000]                mov CX,[c]
    26 00000014 668B15[06000000]                mov DX,[d]
    27                                          
    28 0000001B 6601D1                          add CX,DX   ;c+d
    29 0000001E 6629D8                          sub AX,BX   ;a-b
    30 00000021 668B1D[00000000]                mov BX,[a]  
    31 00000028 6601C1                          add CX,AX   ;(c+d)+(a-b)
    32 0000002B 6601D9                          add CX,BX   ;(c+d)+(a-b)+b
    33                                          
    34                                          ; exit(0)
    35 0000002E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000030 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

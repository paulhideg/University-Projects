     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;(b+c)+(a+b-d)
    15 00000000 03                          a db 3h
    16 00000001 02                          b db 2h
    17 00000002 03                          c db 3h
    18 00000003 01                          d db 1h
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 A0[02000000]                    mov AL,[c]    ;AL=c
    25 00000005 8A25[01000000]                  mov AH,[b]    ;AH=b
    26 0000000B 00E0                            add AL,AH   ;AL=AL+AH (b+c)
    27                                          
    28 0000000D 8A3D[00000000]                  mov BH,[a]    ;BH=a
    29 00000013 00E7                            add BH,AH   ;BH=BH+AH (a+b)
    30 00000015 8A1D[03000000]                  mov BL,[d]  ;BL=d
    31 0000001B 28DF                            sub BH,BL   ;BH=BH+DL   (a+b-d)
    32 0000001D 00F8                            add AL,BH   ;AL=AL+BH   (b+c)+(a+b-d)
    33                                  
    34                                          ; exit(0)
    35 0000001F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000021 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;(a+d-c)-(b+b)
    15 00000000 03                          a db 3h
    16 00000001 01                          b db 1h
    17 00000002 04                          c db 4h
    18 00000003 05                          d db 5h
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 8A25[00000000]                  mov AH, [a]
    24 00000006 A0[03000000]                    mov AL, [d]
    25 0000000B 00E0                            add AL,AH  ; a+d
    26 0000000D 8A3D[02000000]                  mov BH, [c]
    27 00000013 28F8                            sub AL, BH  ;a+d-c
    28                                  
    29 00000015 A0[01000000]                    mov AL,[b]  
    30 0000001A B602                            mov DH, 2h
    31 0000001C F6E6                            mul DH ; AX = b+b
    32 0000001E 6689C3                          mov BX, AX  ; BX = AX
    33                                  
    34 00000021 B400                            mov AH, 0   ;AX = AL (conversie din byte in word)
    35 00000023 6629D8                          sub AX, BX  ;AX =  AX-BX
    36                                          ; exit(0)
    37 00000026 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 00000028 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

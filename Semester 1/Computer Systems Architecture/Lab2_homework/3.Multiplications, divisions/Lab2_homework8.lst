     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                  
    15 00000000 03                          a db 3h
    16 00000001 02                          b db 2h
    17 00000002 01                          c db 1h
    18 00000003 0500                        d dw 5h
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          ;[d-(a+b)*2]/c
    24 00000000 A0[00000000]                    mov AL,[a]  ;AL=a
    25 00000005 8A25[01000000]                  mov AH,[b]  ;AH=b
    26 0000000B 00E0                            add AL,AH   ;AL=AL+AH=a+b
    27 0000000D B602                            mov DH,2h   ;DH=2
    28 0000000F F6E6                            mul DH      ;AX=AL*DH=AL*2=(a+b)*2
    29 00000011 668B1D[03000000]                mov BX,[d]  ;BX=d
    30 00000018 6629C3                          sub BX,AX   ;BX=BX-AX=d-(a+b)*2
    31 0000001B 6689D8                          mov AX,BX   ;AX=BX=d-(a+b)*2
    32 0000001E 8A0D[02000000]                  mov CL,[c]  ;CL=c
    33 00000024 F6F1                            div CL      ;AL=AX/CL=[d-(a+b)*2]/c
    34                                  
    35                                          ; exit(0)
    36 00000026 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000028 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

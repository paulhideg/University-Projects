     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 05                          a db 5h
    15 00000001 03                          d db 3h
    16 00000002 0200                        e dw 2h
    17 00000004 0600                        f dw 6h
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                          ;a*d*e/(f-5)
    23 00000000 A0[00000000]                    mov AL,[a]  ;AL=a
    24 00000005 8A35[01000000]                  mov DH,[d]  ;DH=d
    25 0000000B F6E6                            mul DH      ;AX=AL*DH=a*d
    26 0000000D 668B15[02000000]                mov DX,[e]  ;DX=e
    27 00000014 66F7E2                          mul DX      ;DX:AX ← AX * DX=a*d*e
    28                                          
    29                                          
    30 00000017 668B35[04000000]                mov SI,[f]  ;CX=f
    31 0000001E 66BA0500                        mov DX,5h   ;DX=5
    32 00000022 6629D6                          sub SI,DX   ;CX=CX-DX=f-5
    33 00000025 66F7F6                          div SI      ; AX ← DX:AX / SI, DX ← DX:AX % SI
    34                                  
    35                                  
    36                                          ; exit(0)
    37 00000028 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 0000002A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
